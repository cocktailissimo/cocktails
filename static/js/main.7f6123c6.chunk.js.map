{"version":3,"sources":["components/CocktailGridFull.js","components/Search.js","components/FormSearchByIngredients.js","components/CocktailGrid.js","components/FormCocktailsAlcool.js","components/FormCocktailsSeason.js","components/FormSearchByName.js","pages/Home.js","pages/About.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["CocktailGridFull","cocktailResults","aria-live","className","map","cocktail","index","nom","remarques","id","recette","recettecocktail","etape1","etape2","etape3","sort","reverse","Search","handleOnSearch","querySearch","label","placeholderSearch","htmlFor","type","value","onChange","placeholder","FormSearchByIngredients","useState","setQuerySearch","cocktailsFuse","Fuse","cocktails","keys","includeScore","useExtendedSearch","location","threshold","distance","minMatchCharLength","pattern","results","search","length","result","item","isResults","autoComplete","currentTarget","CocktailGrid","isExpanded","setIsIExpanded","isIndex","setIsIndex","onClick","showFull","slice","FormCocktailsAlcool","ingAlcool","setIngAlcool","filter","alcool","isFull","setIsFull","FormCocktailSeason","actualMonth","Date","getMonth","winter","spring","summer","fall","season","includes","saison","cocktailRandom","Math","floor","random","Home","About","joke","setJoke","Axios","get","then","response","console","log","data","setup","punchline","Header","basename","activeClassName","exact","to","path","component","App","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f6123c6.chunk.js","sourcesContent":["import React from 'react';\n\n\nexport default function CocktailGridFull({cocktailResults}) {\n  return (\n    <>\n    <ul aria-live=\"polite\" className=\"list\">\n        {cocktailResults.map((cocktail, index) => {\n        const { nom, remarques, id } = cocktail;\n        return (\n            <li key={index} className=\"character\">\n            <div><strong>{nom}</strong></div>\n            <div><strong>{id}</strong></div>\n            <div>{remarques}</div>\n            {cocktail.recette.map((recettecocktail) => {\n                return (\n                    <div key={recettecocktail.etape1}>\n                      <div>{recettecocktail.etape1}</div>\n                      <div>{recettecocktail.etape2}</div>\n                      <div>{recettecocktail.etape3}</div>\n                    </div>\n                );\n              })}\n            </li>\n        )\n        }).sort().reverse()}\n    </ul>\n    </>\n  );\n}\n","import React from 'react';\r\nimport '../App.css';\r\n\r\nexport default function Search({handleOnSearch, querySearch, id, label, placeholderSearch}) {\r\n  return (\r\n<>\r\n    <label htmlFor={id} id=\"ariaLabel\">{label}:</label>\r\n    <div \r\n    className=\"dropdownhWrapper\" \r\n    >\r\n        <input \r\n            type=\"text\" \r\n            id={id} \r\n            value={querySearch} \r\n            onChange={handleOnSearch} \r\n            placeholder={placeholderSearch}\r\n        />\r\n    </div>\r\n</>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport CocktailGridFull from './CocktailGridFull';\r\nimport Fuse from 'fuse.js';\r\nimport Search from './Search';\r\nimport cocktails from '../data/cocktails.json';\r\n\r\nexport default function FormSearchByIngredients() {\r\n  const [querySearch, setQuerySearch] = useState('');\r\n  const cocktailKeys = [\"keys\"];\r\n  const cocktailsFuse = new Fuse(cocktails, {\r\n    keys: cocktailKeys,\r\n    includeScore: true,\r\n    useExtendedSearch: true,\r\n    location: 0,\r\n    threshold:0.5,\r\n    distance: 100,\r\n    minMatchCharLength: 3,\r\n  })\r\n\r\n  const pattern = `${querySearch}`;\r\n  const results = cocktailsFuse.search(pattern);\r\n  const cocktailResults = results.length > 0 ? results.map(result => result.item) : cocktails;\r\n  const isResults = results.length > 0;\r\n\r\n  function handleOnSearch({ currentTarget = {} }) {\r\n    const { value } = currentTarget;\r\n    setQuerySearch(value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form autoComplete=\"off\">\r\n          <Search \r\n            handleOnSearch={handleOnSearch}\r\n            querySearch={querySearch}\r\n            id=\"ingredientFilter\"\r\n            label=\"Filtre par ingrÃ©dients\"\r\n            placeholderSearch=\"ex: brandy\"\r\n          />\r\n          {isResults &&  (\r\n            <CocktailGridFull           \r\n            cocktailResults={cocktailResults} \r\n            pattern={pattern} />\r\n          )}\r\n        </form>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\n\nexport default function CocktailGrid({cocktailResults}) {\n  const [isExpanded, setIsIExpanded] = useState(false);\n  const [isIndex, setIsIndex] = useState();\n\n function showFull(index) {\n   setIsIExpanded(!isExpanded);\n   setIsIndex(index);\n   \n }\n\n  return (\n    <>\n    <ul aria-live=\"polite\" className=\"list\">\n        {cocktailResults.map((cocktail, index) => {\n        const { nom, remarques, id } = cocktail;\n        return (\n            <li key={index} className=\"character\">\n              <button onClick={() => showFull(index)}>\n                <div><strong>{nom}</strong></div>\n              </button>\n              <span className={isExpanded && (index === isIndex) ? 'expanded' : 'collapsed'}>\n                  <div><strong>{id}</strong></div>\n                  <div>{remarques}</div>\n                  {cocktail.recette.map((recettecocktail) => {\n                      return (\n                        <div key={recettecocktail.etape1}>\n                          <div>{recettecocktail.etape1}</div>\n                          <div>{recettecocktail.etape2}</div>\n                          <div>{recettecocktail.etape3}</div>\n                        </div> \n                      );\n                  })}\n                </span>\n            </li>\n        )\n        }).slice(0,4).sort().reverse()}\n    </ul>\n    </>\n  );\n}\n","import React, { useState } from 'react';\r\nimport CocktailGrid from './CocktailGrid';\r\nimport CocktailGridFull from './CocktailGridFull';\r\nimport cocktails from '../data/cocktails.json';\r\n\r\n\r\nexport default function FormCocktailsAlcool() {\r\n    const [ingAlcool, setIngAlcool] = useState('avecAlcool');\r\n    const cocktailResults = cocktails.filter(cocktail => cocktail.alcool === ingAlcool);\r\n    const [isFull, setIsFull] = useState(false);\r\n    function viewAll() {\r\n      setIsFull(!isFull);\r\n    }\r\n\r\n  return (\r\n    <>\r\n      Cocktail avec ou sans alcool\r\n        <button onClick={() => setIngAlcool('avecAlcool')} className={ ingAlcool === \"avecAlcool\" ? 'selected' : ''}>Avec Alcool</button>\r\n        <button onClick={() => setIngAlcool('sansAlcool')} className={ ingAlcool === \"sansAlcool\" ? 'selected' : ''}>Sans Alcool</button>\r\n        <button onClick={() => viewAll()}>\r\n          {isFull ? \"Voir tous\" : \"RÃ©duire\"}\r\n        </button>\r\n        { isFull ? (<CocktailGridFull cocktailResults={cocktailResults} />) : (<CocktailGrid            \r\n          cocktailResults={cocktailResults} \r\n        />) }\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport cocktails from '../data/cocktails.json';\r\n\r\nexport default function FormCocktailSeason() {\r\n    const actualDate = new Date();\r\n    const actualMonth = actualDate.getMonth();\r\n\r\n    const winter = [0, 1, 2];\r\n    const spring = [3, 4, 5];\r\n    const summer = [6, 7, 8];\r\n    const fall = [9, 10, 11];\r\n\r\n    const isWinter = () => {\r\n        return winter.includes(actualMonth);\r\n    }\r\n\r\n    const isSpring = () => {\r\n        return spring.includes(actualMonth);\r\n    }\r\n\r\n    const isSummer = () => {\r\n        return summer.includes(actualMonth);\r\n    }\r\n\r\n    const isFall = () => {\r\n        return fall.includes(actualMonth);\r\n    }\r\n    const season = () => {\r\n        switch(true) {\r\n            case isWinter(actualMonth):\r\n                return 'hiver';\r\n            case isSpring(actualMonth):\r\n                return 'printemps';\r\n            case isSummer(actualMonth):\r\n                return 'Ã©tÃ©';      \r\n            case isFall(actualMonth):\r\n                return 'automne';   \r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    const cocktailResults = cocktails.filter(cocktail => cocktail.saison === season());\r\n    const randomCocktail = Math.floor((Math.random() * cocktailResults.length) + 1);\r\n    const cocktailRandom = cocktailResults[randomCocktail-1];\r\n\r\n  return (\r\n    <>\r\n        Highlight cocktail\r\n        <div><strong>{cocktailRandom.nom}</strong></div>\r\n        <div>{cocktailRandom.remarques}</div>\r\n        {cocktailRandom.recette.map((recettecocktail) => {\r\n            return (\r\n                <div key={recettecocktail.etape1}>\r\n                    <div>{recettecocktail.etape1}</div>\r\n                    <div>{recettecocktail.etape2}</div>\r\n                    <div>{recettecocktail.etape3}</div>\r\n                </div>\r\n            );\r\n        })}\r\n    </> \r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport CocktailGridFull from './CocktailGridFull';\r\nimport Fuse from 'fuse.js';\r\nimport Search from './Search';\r\nimport cocktails from '../data/cocktails.json';\r\n\r\nexport default function FormSearchByIngredients() {\r\n  const [querySearch, setQuerySearch] = useState('');\r\n  const cocktailKeys = [\"nom\"];\r\n  const cocktailsFuse = new Fuse(cocktails, {\r\n    keys: cocktailKeys,\r\n    includeScore: true,\r\n    useExtendedSearch: true,\r\n    location: 0,\r\n    threshold:0.5,\r\n    distance: 100,\r\n    minMatchCharLength: 3,\r\n  })\r\n\r\n  const pattern = `${querySearch}`;\r\n  const results = cocktailsFuse.search(pattern);\r\n  const cocktailResults = results.length > 0 ? results.map(result => result.item) : cocktails;\r\n  const isResults = results.length > 0;\r\n\r\n  function handleOnSearch({ currentTarget = {} }) {\r\n    const { value } = currentTarget;\r\n    setQuerySearch(value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form autoComplete=\"off\">\r\n          <Search \r\n            handleOnSearch={handleOnSearch}\r\n            querySearch={querySearch}\r\n            id=\"nameFilter\"\r\n            label=\"Recherche par nom\"\r\n            placeholderSearch=\"ex: Pink Lady\"\r\n          />\r\n          {isResults &&  (\r\n            <CocktailGridFull           \r\n            cocktailResults={cocktailResults} \r\n            pattern={pattern} />\r\n          )}\r\n        </form>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\n// import CocktailGrid from '../components/CocktailGrid';\n// import HighlightCocktail from '../components/HighlightCocktail';\n// import Fuse from 'fuse.js';\n// import Search from '../components/Search';\n// import AlcoolCheckbox from '../components/AlcoolCheckbox';\n// import WithoutAlcoolCheckbox from '../components/WithoutAlcoolCheckbox';\n// import cocktails from '../data/cocktails.json';\nimport FormSearchByIngredients from '../components/FormSearchByIngredients';\nimport FormCocktailsAlcool from '../components/FormCocktailsAlcool';\nimport FormCocktailsSeason from '../components/FormCocktailsSeason';\nimport FormSearchByName from '../components/FormSearchByName';\n\nexport default function Home() {\n  return (\n    <>\n          <FormCocktailsSeason/>\n          <FormCocktailsAlcool />\n          <FormSearchByIngredients />\n          <FormSearchByName />\n    </>\n  );\n}\n","import React, {useState} from 'react';\nimport Axios from 'axios';\n\nexport default function About() {\n  const [joke, setJoke] = useState(\"\");\n  const getJoke = () => {\n    Axios.get(\"https://official-joke-api.appspot.com/random_joke\").then((response) => {\n      console.log(response);\n        setJoke(response.data.setup + response.data.punchline);\n    })\n  }\n    return (\n      <div>\n        <button onClick={getJoke}>Get Joke </button>\n        {joke}\n\n      </div>\n    );\n  }\n","import React from 'react';\nimport { BrowserRouter as HashRouter, Route, NavLink } from \"react-router-dom\";\nimport Home  from '../pages/Home';\nimport About  from '../pages/About';\n\nexport default function Header() {\n    return (\n      <HashRouter basename='/'>\n          <header>\n            <nav>\n              <ul>\n                <li> \n                  <NavLink activeClassName='is--active' exact to=\"/\">Home</NavLink >\n                </li>\n                <li>\n                  <NavLink activeClassName='is--active' to=\"/about\">About</NavLink >\n                </li>                                               \n              </ul> \n            </nav>\n          </header>\n          <div>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/about\" component={About} />\n          </div>\n        </HashRouter>\n    );\n}","import React, { Component } from 'react';\n\nimport Header  from './components/Header';\nimport './App.css';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Header />\n    );\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}